; __includes ["file-path.nls" "remove-world-bleed.nls"]
; extensions [gis]
; globals [series-data-path patch-px-size]

to setup-world
  let width floor (gis:width-of dataset / 2)
  let height floor (gis:height-of dataset / 2)

  resize-world (-1 * width ) width (-1 * height ) height
  set-patch-size patch-px-size

  let i 0
  let test test-world-bleed

  while [(any-true? test) and (i != 2)] [ ; (i != length files)
    let dataset-i gis:load-dataset file-path series-data-path (item i files)
    let envelope gis:envelope-of dataset-i

    ifelse ((item 0 envelope < -150) or (item 1 envelope > 150)) [
      gis:set-world-envelope-ds envelope
    ] [
      gis:set-world-envelope envelope
    ]

    gis:apply-raster dataset-i value
    remove-world-bleed 0
    gis:apply-raster dataset-i value
    set test test-world-bleed
    set i i + 1
  ]

  carefully [
    set nan item 0 filter is-nan? [value] of patches with [is-number? value]
  ] [
    set nan 0
  ]
end
