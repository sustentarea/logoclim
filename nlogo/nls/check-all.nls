; __includes ["check-empty.nls" "check-list.nls" "check-nan.nls"]

to-report all-member? [#list #member-list]
  assert-list #list
  assert-not-empty #list
  assert-list #member-list
  assert-not-empty #member-list

  set #list remove-duplicates #list
  set #member-list remove-duplicates #member-list

  let test map [i -> (member? i #member-list)] #list

  report reduce [[i j] -> i and j] test
end

to-report list-all? [#list #x]
  assert-list #list
  assert-not-empty #list

  set #list remove-duplicates #list

  ifelse (is-list? #x) [
    assert-not-empty #x

    set #x remove-duplicates #x

    report (all-member? #list #x) and (all-member? #x #list)
  ] [
    report #list = (list #x)
  ]
end

to-report all-true? [#list]
  report list-all? #list true
end

to-report all-false? [#list]
  report list-all? #list false
end

to-report all-member-or-nan? [#list #member-list]
  assert-list #list
  assert-not-empty #list
  assert-list #member-list
  assert-not-empty #member-list

  set #list remove-duplicates #list
  set #member-list remove-duplicates #member-list

  let test map [
    i -> (member? i #member-list) or (is-nan? i)
  ] #list

  report reduce [[i j] -> i and j] test
end
